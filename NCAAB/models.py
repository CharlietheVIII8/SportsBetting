from django.db import models


# Create your models here.

class Team(models.Model):
    abbreviation = models.CharField(max_length=255)
    name = models.CharField(max_length=255, primary_key=True)
    conference = models.CharField(max_length=255)
    games_played = models.IntegerField(null=True)
    minutes_played = models.IntegerField(null=True)
    field_goals_made = models.IntegerField(null=True)
    field_goals_attempted = models.IntegerField(null=True)
    field_goal_percentage = models.FloatField(null=True)
    three_pointers_made = models.IntegerField(null=True)
    three_pointers_attempted = models.IntegerField(null=True)
    three_point_percentage = models.FloatField(null=True)
    two_pointers_made = models.IntegerField(null=True)
    two_pointers_attempted = models.IntegerField(null=True)
    two_point_percentage = models.FloatField(null=True)
    effective_field_goal_percentage = models.FloatField(null=True)
    free_throws_made = models.IntegerField(null=True)
    free_throws_attempted = models.IntegerField(null=True)
    free_throw_percentage = models.FloatField(null=True)
    offensive_rebounds = models.IntegerField(null=True)
    defensive_rebounds = models.IntegerField(null=True)
    total_rebounds = models.IntegerField(null=True)
    assists = models.IntegerField(null=True)
    steals = models.IntegerField(null=True)
    blocks = models.IntegerField(null=True)
    turnovers = models.IntegerField(null=True)
    personal_fouls = models.IntegerField(null=True)
    points = models.IntegerField(null=True)
    true_shooting_percentage = models.FloatField(null=True)
    three_point_attempt_rate = models.FloatField(null=True)
    free_throw_attempt_rate = models.FloatField(null=True)
    offensive_rebound_percentage = models.FloatField(null=True)
    total_rebound_percentage = models.FloatField(null=True)
    assist_percentage = models.FloatField(null=True)
    steal_percentage = models.FloatField(null=True)
    block_percentage = models.FloatField(null=True)
    turnover_percentage = models.FloatField(null=True)
    away_losses = models.IntegerField(null=True)
    away_wins = models.IntegerField(null=True)
    home_losses = models.IntegerField(null=True)
    home_wins = models.IntegerField(null=True)
    conference_wins = models.IntegerField(null=True)
    conference_losses = models.IntegerField(null=True)
    losses = models.IntegerField(null=True)
    wins = models.IntegerField(null=True)
    net_rating = models.FloatField(null=True)
    offensive_rating = models.FloatField(null=True)
    opp_assist_percentage = models.FloatField(null=True)
    opp_assists = models.IntegerField(null=True)
    opp_block_percentage = models.FloatField(null=True)
    opp_blocks = models.IntegerField(null=True)
    opp_defensive_rebounds = models.IntegerField(null=True)
    free_throws_per_field_goal_attempt = models.FloatField(null=True)
    opp_effective_field_goal_percentage = models.FloatField(null=True)
    opp_field_goal_attempts = models.IntegerField(null=True)
    opp_field_goal_percentage = models.FloatField(null=True)
    opp_field_goals_made = models.IntegerField(null=True)
    opp_free_throw_attempt_rate = models.FloatField(null=True)
    opp_free_throw_attempts = models.IntegerField(null=True)
    opp_free_throw_percentage = models.FloatField(null=True)
    opp_free_throws_made = models.IntegerField(null=True)
    opp_free_throws_per_field_goal_attempt = models.FloatField(null=True)
    opp_offensive_rating = models.FloatField(null=True)
    opp_offensive_rebound_percentage = models.FloatField(null=True)
    opp_offensive_rebounds = models.IntegerField(null=True)
    opp_personal_fouls = models.IntegerField(null=True)
    opp_points = models.IntegerField(null=True)
    opp_steal_percentage = models.FloatField(null=True)
    opp_steals = models.IntegerField(null=True)
    opp_three_point_attempt_rate = models.FloatField(null=True)
    opp_three_point_field_goal_attempts = models.IntegerField(null=True)
    opp_three_point_field_goal_percentage = models.FloatField(null=True)
    opp_three_point_field_goals_made = models.IntegerField(null=True)
    opp_two_point_field_goal_attempts = models.IntegerField(null=True)
    opp_two_point_field_goal_percentage = models.FloatField(null=True)
    opp_two_point_field_goals_made = models.IntegerField(null=True)
    opp_total_rebound_percentage = models.FloatField(null=True)
    opp_total_rebounds = models.IntegerField(null=True)
    opp_true_shooting_percentage = models.FloatField(null=True)
    opp_turnover_percentage = models.FloatField(null=True)
    opp_turnovers = models.IntegerField(null=True)
    pace = models.FloatField(null=True)
    simple_rating_system = models.FloatField(null=True)
    strength_of_schedule = models.FloatField(null=True)
    win_percentage = models.FloatField(null=True)

    def __str__(self):
        return self.name


class Player(models.Model):
    player_id = models.CharField(max_length=255, primary_key=True)
    name = models.CharField(max_length=255)
    field_goals_made = models.IntegerField()
    field_goals_attempted = models.IntegerField()
    field_goal_percentage = models.FloatField(null=True)
    three_pointers_made = models.IntegerField()
    three_pointers_attempted = models.IntegerField()
    three_point_percentage = models.FloatField(null=True)
    two_pointers_made = models.IntegerField()
    two_pointers_attempted = models.IntegerField()
    two_point_percentage = models.FloatField(null=True)
    effective_field_goal_percentage = models.FloatField(null=True)
    free_throws_made = models.IntegerField()
    free_throws_attempted = models.IntegerField()
    free_throw_percentage = models.FloatField(null=True)
    offensive_rebounds = models.IntegerField()
    defensive_rebounds = models.IntegerField()
    total_rebounds = models.IntegerField()
    assists = models.IntegerField()
    steals = models.IntegerField()
    blocks = models.IntegerField()
    turnovers = models.IntegerField()
    personal_fouls = models.IntegerField()
    points = models.IntegerField()
    true_shooting_percentage = models.FloatField(null=True)
    three_point_attempt_rate = models.FloatField(null=True)
    free_throw_attempt_rate = models.FloatField(null=True)
    offensive_rebound_percentage = models.FloatField(null=True)
    defensive_rebound_percentage = models.FloatField(null=True)
    total_rebound_percentage = models.FloatField(null=True)
    assist_percentage = models.FloatField(null=True)
    steal_percentage = models.FloatField(null=True)
    block_percentage = models.FloatField(null=True)
    turnover_percentage = models.FloatField(null=True)
    usage_percentage = models.FloatField(null=True)


class GameBoxscore(models.Model):
    date = models.DateTimeField()
    away_assist_percentage = models.FloatField(null=True)
    away_assists = models.IntegerField(null=True)
    away_block_percentage = models.FloatField(null=True)
    away_blocks = models.IntegerField(null=True)
    away_defensive_rating = models.FloatField(null=True)
    away_defensive_rebound_percentage = models.FloatField(null=True)
    away_defensive_rebounds = models.IntegerField(null=True)
    away_effective_field_goal_percentage = models.FloatField(null=True)
    away_field_goal_attempts = models.IntegerField(null=True)
    away_field_goal_percentage = models.FloatField(null=True)
    away_field_goals = models.IntegerField(null=True)
    away_free_throw_attempt_rate = models.FloatField(null=True)
    away_free_throw_attempts = models.IntegerField(null=True)
    away_free_throw_percentage = models.FloatField(null=True)
    away_free_throws = models.IntegerField(null=True)
    away_losses = models.IntegerField(null=True)
    away_minutes_played = models.IntegerField(null=True)
    away_offensive_rating = models.FloatField(null=True)
    away_offensive_rebound_percentage = models.FloatField(null=True)
    away_offensive_rebounds = models.IntegerField(null=True)
    away_personal_fouls = models.IntegerField(null=True)
    away_points = models.IntegerField(null=True)
    away_ranking = models.FloatField(null=True)
    away_steal_percentage = models.FloatField(null=True)
    away_steals = models.IntegerField(null=True)
    away_three_point_attempt_rate = models.FloatField(null=True)
    away_three_point_field_goal_attempts = models.IntegerField(null=True)
    away_three_point_field_goal_percentage = models.FloatField(null=True)
    away_three_point_field_goals = models.IntegerField(null=True)
    away_total_rebound_percentage = models.FloatField(null=True)
    away_total_rebounds = models.IntegerField(null=True)
    away_true_shooting_percentage = models.FloatField(null=True)
    away_turnover_percentage = models.FloatField(null=True)
    away_turnovers = models.IntegerField(null=True)
    away_two_point_field_goal_attempts = models.IntegerField(null=True)
    away_two_point_field_goal_percentage = models.FloatField(null=True)
    away_two_point_field_goals = models.IntegerField(null=True)
    away_win_percentage = models.FloatField(null=True)
    away_wins = models.IntegerField(null=True)
    home_assist_percentage = models.FloatField(null=True)
    home_assists = models.IntegerField(null=True)
    home_block_percentage = models.FloatField(null=True)
    home_blocks = models.IntegerField(null=True)
    home_defensive_rating = models.FloatField(null=True)
    home_defensive_rebound_percentage = models.FloatField(null=True)
    home_defensive_rebounds = models.IntegerField(null=True)
    home_effective_field_goal_percentage = models.FloatField(null=True)
    home_field_goal_attempts = models.IntegerField(null=True)
    home_field_goal_percentage = models.FloatField(null=True)
    home_field_goals = models.IntegerField(null=True)
    home_free_throw_attempt_rate = models.FloatField(null=True)
    home_free_throw_attempts = models.IntegerField(null=True)
    home_free_throw_percentage = models.FloatField(null=True)
    home_free_throws = models.IntegerField(null=True)
    home_losses = models.IntegerField(null=True)
    home_minutes_played = models.IntegerField(null=True)
    home_offensive_rating = models.FloatField(null=True)
    home_offensive_rebound_percentage = models.FloatField(null=True)
    home_offensive_rebounds = models.IntegerField(null=True)
    home_personal_fouls = models.IntegerField(null=True)
    home_points = models.IntegerField(null=True)
    home_ranking = models.FloatField(null=True)
    home_steal_percentage = models.FloatField(null=True)
    home_steals = models.IntegerField(null=True)
    home_three_point_attempt_rate = models.FloatField(null=True)
    home_three_point_field_goal_attempts = models.IntegerField(null=True)
    home_three_point_field_goal_percentage = models.FloatField(null=True)
    home_three_point_field_goals = models.IntegerField(null=True)
    home_total_rebound_percentage = models.FloatField(null=True)
    home_total_rebounds = models.IntegerField(null=True)
    home_true_shooting_percentage = models.FloatField(null=True)
    home_turnover_percentage = models.FloatField(null=True)
    home_turnovers = models.IntegerField(null=True)
    home_two_point_field_goal_attempts = models.IntegerField(null=True)
    home_two_point_field_goal_percentage = models.FloatField(null=True)
    home_two_point_field_goals = models.IntegerField(null=True)
    home_win_percentage = models.FloatField(null=True)
    home_wins = models.IntegerField(null=True)
    location = models.CharField(max_length=255, default=None)
    losing_abbr = models.CharField(max_length=255, default=None)
    losing_name = models.ForeignKey(Team, on_delete=models.CASCADE, related_name='boxscore_loser', default=None)
    pace = models.FloatField(null=True)
    winner = models.CharField(max_length=255, default=None)
    winning_abbr = models.CharField(max_length=255, default=None)
    winning_name = models.ForeignKey(Team, on_delete=models.CASCADE, related_name='boxscore_winner', default=None)

    class Meta:
        unique_together = (("date", "winning_name", "losing_name"),)


class PlayerBoxscore(models.Model):
    player = models.OneToOneField(Player, on_delete=models.CASCADE)
    date = models.DateTimeField()
    game = models.ForeignKey(GameBoxscore, on_delete=models.CASCADE)
    offensive_rating = models.IntegerField(null=True)
    defensive_rating = models.IntegerField(null=True)
    assist_percentage = models.FloatField(null=True)
    assists = models.IntegerField()
    block_percentage = models.FloatField(null=True)
    blocks = models.IntegerField()
    defensive_rebound_percentage = models.FloatField(null=True)
    defensive_rebounds = models.IntegerField()
    effective_field_goal_percentage = models.FloatField(null=True)
    field_goals_attempted = models.IntegerField()
    field_goal_percentage = models.FloatField(null=True)
    field_goals_made = models.IntegerField()
    free_throw_attempt_rate = models.FloatField(null=True)
    free_throws_attempted = models.IntegerField()
    free_throw_percentage = models.FloatField(null=True)
    free_throws_made = models.IntegerField()
    minutes_played = models.IntegerField()
    offensive_rebound_percentage = models.FloatField(null=True)
    offensive_rebounds = models.IntegerField()
    personal_fouls = models.IntegerField()
    points = models.IntegerField()
    steal_percentage = models.FloatField(null=True)
    steals = models.IntegerField()
    three_point_attempt_rate = models.FloatField(null=True)
    three_pointers_attempted = models.IntegerField()
    three_point_percentage = models.FloatField(null=True)
    three_pointers_made = models.IntegerField()
    total_rebound_percentage = models.FloatField(null=True)
    total_rebounds = models.IntegerField()
    true_shooting_percentage = models.FloatField(null=True)
    turnover_percentage = models.FloatField(null=True)
    turnovers = models.IntegerField()
    two_pointers_attempted = models.IntegerField()
    two_point_percentage = models.FloatField(null=True)
    two_pointers_made = models.IntegerField()
    usage_percentage = models.FloatField(null=True)
